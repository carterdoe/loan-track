import typescriptEslint from '@typescript-eslint/eslint-plugin';
import typescriptParser from '@typescript-eslint/parser';
import eslintPluginImport from 'eslint-plugin-import';
import eslintPluginN from 'eslint-plugin-n';

export default [
  {
    files: ['src/**/*.ts'],
    ignores: ['dist/', 'node_modules/', 'coverage/', 'data/', '*.js', '*.d.ts'],
    languageOptions: {
      ecmaVersion: 2022,
      sourceType: 'module',
      parser: typescriptParser,
      parserOptions: {
        project: './tsconfig.json',
      },
      globals: {
        node: true,
        es2022: true,
        jest: true,
      },
    },
    plugins: {
      '@typescript-eslint': typescriptEslint,
      import: eslintPluginImport,
      n: eslintPluginN,
    },
    rules: {
      // TypeScript Rules
      '@typescript-eslint/no-unused-vars': [
        'error',
        {
          argsIgnorePattern: '^_',
          varsIgnorePattern: '^_',
          caughtErrorsIgnorePattern: '^_',
        },
      ],
      '@typescript-eslint/no-explicit-any': 'off',
      '@typescript-eslint/explicit-function-return-type': 'off',
      '@typescript-eslint/explicit-module-boundary-types': 'off',
      '@typescript-eslint/no-inferrable-types': 'off',
      '@typescript-eslint/no-var-requires': 'error',
      '@typescript-eslint/ban-ts-comment': [
        'error',
        {
          'ts-expect-error': 'allow-with-description',
          'ts-ignore': 'allow-with-description',
          'ts-nocheck': 'allow-with-description',
          'ts-check': false,
        },
      ],
      '@typescript-eslint/no-non-null-assertion': 'off',
      '@typescript-eslint/prefer-nullish-coalescing': 'off',
      '@typescript-eslint/prefer-optional-chain': 'off',
      '@typescript-eslint/no-unnecessary-type-assertion': 'off',
      '@typescript-eslint/no-floating-promises': 'off',
      '@typescript-eslint/await-thenable': 'off',
      '@typescript-eslint/no-misused-promises': 'off',
      '@typescript-eslint/require-await': 'off',
      '@typescript-eslint/no-unsafe-assignment': 'off',
      '@typescript-eslint/no-unsafe-member-access': 'off',
      '@typescript-eslint/no-unsafe-call': 'off',
      '@typescript-eslint/no-unsafe-return': 'off',
      '@typescript-eslint/restrict-template-expressions': 'off',

      // General Rules
      'no-console': 'off',
      'no-debugger': 'error',
      'no-alert': 'error',
      'no-eval': 'error',
      'no-implied-eval': 'error',
      'no-new-func': 'error',
      'no-script-url': 'error',
      'no-void': 'error',
      'no-with': 'error',
      strict: ['error', 'never'],
      'no-undef': 'off',
      'no-unused-vars': 'off',
      'no-redeclare': 'off',
      'no-dupe-class-members': 'off',
      'no-loss-of-precision': 'error',
      'no-promise-executor-return': 'off',
      'no-unreachable-loop': 'error',
      'no-useless-backreference': 'error',
      'require-atomic-updates': 'error',

      // Best Practices
      'array-callback-return': 'error',
      'block-scoped-var': 'error',
      complexity: 'off',
      'consistent-return': 'off',
      curly: ['error', 'all'],
      'default-case': 'off',
      'default-case-last': 'error',
      'dot-notation': 'off',
      eqeqeq: ['error', 'always'],
      'grouped-accessor-pairs': 'error',
      'guard-for-in': 'error',
      'max-classes-per-file': 'off',
      'max-depth': 'off',
      'max-lines': 'off',
      'max-lines-per-function': 'off',
      'max-nested-callbacks': 'off',
      'max-params': 'off',
      'no-caller': 'error',
      'no-case-declarations': 'error',
      'no-constructor-return': 'error',
      'no-else-return': 'off',
      'no-empty-function': 'off',
      'no-empty-pattern': 'error',
      'no-extend-native': 'error',
      'no-extra-bind': 'error',
      'no-extra-label': 'error',
      'no-fallthrough': 'error',
      'no-global-assign': 'error',
      'no-implicit-coercion': 'off',
      'no-implicit-globals': 'error',
      'no-invalid-this': 'off',
      'no-iterator': 'error',
      'no-labels': 'error',
      'no-lone-blocks': 'error',
      'no-loop-func': 'error',
      'no-magic-numbers': 'off',
      'no-multi-assign': 'off',
      'no-multi-str': 'error',
      'no-new': 'error',
      'no-new-wrappers': 'error',
      'no-octal': 'error',
      'no-octal-escape': 'error',
      'no-param-reassign': 'off',
      'no-proto': 'error',
      'no-return-assign': 'error',
      'no-return-await': 'error',
      'no-self-assign': 'error',
      'no-self-compare': 'error',
      'no-sequences': 'error',
      'no-throw-literal': 'error',
      'no-unmodified-loop-condition': 'error',
      'no-unused-expressions': 'error',
      'no-useless-call': 'error',
      'no-useless-catch': 'error',
      'no-useless-concat': 'error',
      'no-useless-escape': 'error',
      'no-useless-return': 'error',
      'prefer-const': 'error',
      'prefer-promise-reject-errors': 'error',
      'prefer-regex-literals': 'error',
      radix: 'error',
      'require-await': 'off',
      'vars-on-top': 'error',
      'wrap-iife': 'error',
      yoda: 'error',

      // Stylistic Rules
      camelcase: 'off',
      'capitalized-comments': 'off',
      'consistent-this': 'off',
      'func-name-matching': 'off',
      'func-names': 'off',
      'func-style': 'off',
      'id-denylist': 'off',
      'id-length': 'off',
      'max-statements-per-line': ['error', { max: 1 }],
      'new-cap': 'off',
      'no-array-constructor': 'error',
      'no-bitwise': 'off',
      'no-continue': 'off',
      'no-inline-comments': 'off',
      'no-lonely-if': 'off',
      'no-negated-condition': 'off',
      'no-nested-ternary': 'off',
      'no-new-object': 'error',
      'no-plusplus': 'off',
      'no-restricted-syntax': 'off',
      'no-ternary': 'off',
      'no-underscore-dangle': 'off',
      'no-unneeded-ternary': 'error',
      'one-var': ['error', 'never'],
      'operator-assignment': 'off',
      'prefer-exponentiation-operator': 'error',
      'prefer-object-spread': 'error',
      'spaced-comment': 'off',

      // ES6+ Rules
      'arrow-body-style': 'off',
      'arrow-parens': 'off',
      'arrow-spacing': 'error',
      'constructor-super': 'error',
      'generator-star-spacing': ['error', { before: false, after: true }],
      'no-class-assign': 'error',
      'no-confusing-arrow': 'off',
      'no-const-assign': 'error',
      'no-duplicate-imports': 'error',
      'no-new-symbol': 'error',
      'no-restricted-exports': 'off',
      'no-restricted-imports': 'off',
      'no-this-before-super': 'error',
      'no-useless-computed-key': 'error',
      'no-useless-constructor': 'error',
      'no-useless-rename': 'error',
      'no-var': 'error',
      'object-shorthand': 'off',
      'prefer-arrow-callback': 'off',
      'prefer-destructuring': 'off',
      'prefer-numeric-literals': 'error',
      'prefer-rest-params': 'error',
      'prefer-spread': 'error',
      'prefer-template': 'off',
      'require-yield': 'error',
      'rest-spread-spacing': ['error', 'never'],
      'sort-imports': 'off',
      'symbol-description': 'error',
      'template-curly-spacing': 'error',
      'yield-star-spacing': ['error', 'after'],

      // Import Rules
      'import/order': 'off',
      'import/first': 'off',
      'import/no-duplicates': 'off',
      'import/no-unresolved': 'off',
      'import/no-cycle': 'off',
      'import/no-self-import': 'off',
      'import/no-useless-path-segments': 'off',
      'import/newline-after-import': 'off',
      'import/no-absolute-path': 'off',
      'import/no-dynamic-require': 'off',
      'import/no-webpack-loader-syntax': 'off',

      // Node.js Rules (using eslint-plugin-n)
      'n/no-deprecated-api': 'off',
      'n/no-extraneous-import': 'off',
      'n/no-extraneous-require': 'off',
      'n/no-missing-import': 'off',
      'n/no-missing-require': 'off',
      'n/no-unpublished-import': 'off',
      'n/no-unpublished-require': 'off',
      'n/no-unsupported-features/es-syntax': 'off',
      'n/prefer-global/buffer': 'off',
      'n/prefer-global/console': 'off',
      'n/prefer-global/process': 'off',
      'n/prefer-global/url-search-params': 'off',
      'n/prefer-global/url': 'off',
      'n/prefer-promises/dns': 'off',
      'n/prefer-promises/fs': 'off',
    },
    settings: {
      'import/resolver': {
        typescript: {
          alwaysTryTypes: true,
          project: './tsconfig.json',
        },
      },
      node: {
        tryExtensions: ['.js', '.json', '.ts'],
      },
    },
  },
  {
    files: ['**/*.test.ts', '**/*.spec.ts', '**/__tests__/**/*.ts'],
    languageOptions: {
      globals: { jest: true },
    },
    rules: {
      '@typescript-eslint/no-explicit-any': 'off',
      '@typescript-eslint/no-unsafe-assignment': 'off',
      '@typescript-eslint/no-unsafe-member-access': 'off',
      '@typescript-eslint/no-unsafe-call': 'off',
      '@typescript-eslint/no-unsafe-return': 'off',
      '@typescript-eslint/unbound-method': 'off',
      'max-lines-per-function': 'off',
      'max-lines': 'off',
      'no-magic-numbers': 'off',
      'id-denylist': 'off',
    },
  },
  {
    files: ['src/types/**/*.ts'],
    rules: {
      '@typescript-eslint/no-explicit-any': 'off',
      '@typescript-eslint/ban-types': 'off',
      'max-lines': 'off',
    },
  },
  {
    files: ['src/config.ts'],
    rules: {
      'no-magic-numbers': 'off',
    },
  },
  {
    files: ['*.js'],
    languageOptions: {
      globals: { node: true, commonjs: true },
    },
    rules: {
      '@typescript-eslint/no-var-requires': 'off',
    },
  },
];